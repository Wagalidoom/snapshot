type GnosisToken_Transfer {
  id: ID!
  from: String!
  to: String!
  value: BigInt!
}

type NonfungiblePositionManager_DecreaseLiquidity {
  id: ID!
  tokenId: BigInt!
  liquidity: BigInt!
  amount0: BigInt!
  amount1: BigInt!
}

type NonfungiblePositionManager_IncreaseLiquidity {
  id: ID!
  tokenId: BigInt!
  liquidity: BigInt!
  amount0: BigInt!
  amount1: BigInt!
}

type NonfungiblePositionManager_Transfer {
  id: ID!
  from: String!
  to: String!
  tokenId: BigInt!
}

type TokenLock_Transfer {
  id: ID!
  from: String!
  to: String!
  value: BigInt!
}

type UniswapV3Factory_PoolCreated {
  id: ID!
  token0: String!
  token1: String!
  fee: BigInt!
  tickSpacing: BigInt!
  pool: String!
}

type Vault_InternalBalanceChanged {
  id: ID!
  user: String!
  token: String!
  delta: BigInt!
}

type Vault_PoolBalanceChanged {
  id: ID!
  poolId: String!
  liquidityProvider: String!
  tokens: [String!]!
  deltas: [BigInt!]!
  protocolFeeAmounts: [BigInt!]!
}

type Vault_Swap {
  id: ID!
  poolId: String!
  tokenIn: String!
  tokenOut: String!
  amountIn: BigInt!
  amountOut: BigInt!
}

type Vyper_contract_Transfer {
  id: ID!
  _from: String!
  _to: String!
  _value: BigInt!
}

type WeightedPoolFactory_PoolCreated {
  id: ID!
  pool: String!
}

type User {
  id: ID! # address
  voteWeight: BigInt!
  gno: BigInt!
  mgno: BigInt!
  lgno: BigInt!
  deposit: BigInt!
  sgno: BigInt!
  balancerInternalGno: BigInt!
  weightedPoolPositions: [WeightedPoolPosition!]! @derivedFrom(field: "user")
  concentratedLiquidityPositions: [ConcentratedLiquidityPosition!]!
    @derivedFrom(field: "user")
}

# used for Uniswap V2 pairs and Balancer weighted pools
type WeightedPool {
  id: ID! # address
  totalSupply: BigInt!
  gnoIsFirst: Boolean! # only relevant for uni v2
  gnoBalance: BigInt!
  positions: [WeightedPoolPosition!]! @derivedFrom(field: "pool")
}
type WeightedPoolPosition {
  id: ID! # <PAIR_ADDRESS>-<USER_ADDRESS>
  user: User!
  pool: WeightedPool!
  liquidity: BigInt!
}

# used for Uniswap V3 pairs
type ConcentratedLiquidityPair {
  id: ID! # address
  sqrtRatio: BigDecimal!
  gnoIsFirst: Boolean!
  positions: [ConcentratedLiquidityPosition!]! @derivedFrom(field: "pair")
}
type ConcentratedLiquidityPosition {
  id: ID! # UniV3 NFT tokenId
  user: User
  pair: ConcentratedLiquidityPair!
  liquidity: BigInt!
  lowerTick: BigInt!
  upperTick: BigInt!
  gnoBalance: BigInt!
}

